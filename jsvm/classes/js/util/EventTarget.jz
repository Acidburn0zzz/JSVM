$package("js.util");$import("js.util.Observable");js.util.EventTarget = function () {var CLASS = js.util.EventTarget, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, Event = js.util.Event, A = js.util.LinkedList;var _getListeners = function (eventType) {var hName = "on" + eventType, listeners = this[hName];if (!Class.isArray(listeners)) {listeners = this[hName] = A.$decorate([]);}return listeners;};thi$.addEventListener = function (eventType, fn, captured) {_getListeners.call(this, eventType).push(fn);};thi$.removeEventListener = function (eventType, fn, captured) {_getListeners.call(this, eventType).remove(fn);};var _prepareArgs = function (eventType, flag, listener, handler) {var check = Event.FLAG.check(flag), args = Array.prototype.slice.call(arguments, 0);if (check.customized) {args.unshift(this);} else {if (this.view != undefined) {args.unshift(this.view);} else {args.unshift(this);}}return args;};thi$.attachEvent = function (eventType, flag, listener, handler) {Event.attachEvent.apply(this, _prepareArgs.apply(this, arguments));};thi$.detachEvent = function (eventType, flag, listener, handler) {Event.detachEvent.apply(this, _prepareArgs.apply(this, arguments));};thi$.declareEvent = function (eventType) {this["on" + eventType] = null;};thi$.fireEvent = function (evt) {var eventType = evt instanceof Event ? evt.getType() : evt.toString();var listeners = this["on" + eventType];switch (Class.typeOf(listeners)) {case "function":listeners.call(this, evt);break;case "array":for (var i = 0, len = listeners.length; i < len; i++) {listeners[i](evt);}break;default:break;}};thi$.destroy = function () {var eType, handlers = this.__handlers__;if (handlers) {for (eType in handlers) {this.detachEvent(eType, 4);}delete this.__handlers__;}handlers = this.view ? this.view.__handlers__ : undefined;if (handlers) {for (eType in handlers) {this.detachEvent(eType, 0);this.detachEvent(eType, 1);}this.view.__handlers__ = null;}arguments.callee.__super__.apply(this, arguments);}.$override(this.destroy);this._init.apply(this, arguments);}.$extend(js.util.Observable);