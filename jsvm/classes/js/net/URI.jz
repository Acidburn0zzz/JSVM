$package("js.net");js.net.URI = function (url) {var CLASS = js.net.URI, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Keys = ["source", "scheme", "userInfo", "user", "password", "host", "port", "path", "query", "fragment"];var UrlRegExp = new RegExp("([-+a-zA-Z0-9]+)://" + "((.[^:]*):?(.*)?@)?" + "(.[^:/]*)" + ":?([0-9]{1,6})?" + "(/.[^?#]*)" + "[?]?(.[^#]*)?" + "#?(.*)?");var QueryRegExp = new RegExp("(?:^|&)([^&=]*)=?([^&]*)", "g");thi$._parse = function (query) {var params = {};if (query) {query.replace(QueryRegExp, function ($0, $1, $2) {if ($1) {params[$1] = $2;}});}return params;};thi$._init = function () {if (arguments.length === 1) {var res = UrlRegExp.exec(decodeURI(arguments[0]));for (var i = 0, len = res.length; i < len; i++) {this[Keys[i]] = res[i];}} else {this.scheme = arguments[0];this.userInfo = arguments[1];this.host = arguments[2];this.port = arguments[3];this.path = arguments[4];this.query = arguments[5];this.fragment = arguments[6];}this.params = this._parse(this.query);};this._init.apply(this, arguments);}.$extend(js.lang.Object);