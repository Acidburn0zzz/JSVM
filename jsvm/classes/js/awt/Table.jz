$package("js.awt");js.awt.TableModel = function () {var CLASS = js.awt.Table, thi$ = CLASS.prototype;if (CLASS.__defined__) {return;}CLASS.__defined__ = true;var Class = js.lang.Class, Event = js.util.Event, DOM = J$VM.DOM, System = J$VM.System, MQ = J$VM.MQ;thi$.addModelListener = function (listener) {};thi$.removeModelListener = function (listener) {};thi$.getColumnCount = function () {};thi$.getColumnName = function (colIndex) {};thi$.getRowCount = function () {};thi$.getVauleAt = function (rowIndex, colIndex) {};thi$.isCellEditable = function (rowIndex, colIndex) {};thi$.setValueAt = function (value, rowIndex, colIndex) {};};js.awt.Table = function (def, Runtime) {var CLASS = js.awt.Table, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, Event = js.util.Event, DOM = J$VM.DOM, System = J$VM.System, MQ = J$VM.MQ;thi$.buildTable = function (grid) {var R = this.Runtime(), row, cell, i, j, m, n, trow, tcell;this.grid = grid;for (i = 0, m = grid.rowNum(); i < m; i++) {row = grid.row(i);trow = undefined;if (row.visible) {trow = row.trow = new (CLASS.Row)({uuid:row.uuid()}, R);}for (j = 0, n = grid.colNum(); j < n; j++) {cell = grid.cell(i, j);if (trow && cell && cell.visible) {tcell = cell.tcell = new (CLASS.Cell)({uuid:cell.uuid(), rowspan:cell.rowSpan, colspan:cell.colSpan}, R);tcell.appendTo(trow.view);}}if (trow) {trow.appendTo(this.view);}}};thi$.destroy = function () {delete this.grid;arguments.callee.__super__.apply(this, arguments);}.$override(this.destroy);thi$._init = function (def, Runtime) {if (def == undefined) {return;}def.classType = def.classType || "js.awt.Table";def.className = def.className || "jsvm_table";def.viewType = "TABLE";arguments.callee.__super__.apply(this, arguments);var grid = new (Class.forName("js.awt.Grid"))(this.def);this.buildTable(grid);}.$override(this._init);this._init.apply(this, arguments);}.$extend(js.awt.Component);js.awt.Table.Row = function (def, Runtime) {var CLASS = js.awt.Table.Row, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, Event = js.util.Event, DOM = J$VM.DOM, System = J$VM.System, MQ = J$VM.MQ;thi$.repaint = function () {}.$override(this.repaint);thi$.doLayout = function () {}.$override(this.doLayout);thi$._init = function (def, Runtime) {if (def == undefined) {return;}def.classType = def.classType || "js.awt.Table.Row";def.className = def.className || "jsvm_table_row";def.viewType = "TR";arguments.callee.__super__.apply(this, arguments);}.$override(this._init);this._init.apply(this, arguments);}.$extend(js.awt.Component);js.awt.Table.Cell = function (def, Runtime) {var CLASS = js.awt.Table.Cell, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, Event = js.util.Event, DOM = J$VM.DOM, System = J$VM.System, MQ = J$VM.MQ;thi$.repaint = function () {}.$override(this.repaint);thi$.doLayout = function () {}.$override(this.doLayout);thi$._init = function (def, Runtime) {if (def == undefined) {return;}def.classType = def.classType || "js.awt.Table.Cell";def.className = def.className || "jsvm_table_cell";def.viewType = "TD";arguments.callee.__super__.apply(this, arguments);var ele = this.view;ele.setAttribute("rowspan", "" + def.rowspan);ele.setAttribute("colspan", "" + def.colspan);}.$override(this._init);this._init.apply(this, arguments);}.$extend(js.awt.Component);