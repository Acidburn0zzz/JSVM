$package("js.awt");js.awt.CardLayout = function (def) {var CLASS = js.awt.CardLayout, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class, Event = js.util.Event, DOM = J$VM.DOM, System = J$VM.System;thi$.addLayoutComponent = function (comp, constraints) {arguments.callee.__super__.apply(this, arguments);var container = comp.getContainer(), bounds;if (container.isDOMElement()) {bounds = container.getBounds();comp.setBounds(bounds.MBP.paddingLeft, bounds.MBP.paddingTop, bounds.innerWidth, bounds.innerHeight);}}.$override(this.addLayoutComponent);thi$.layoutContainer = function (container) {var comps = container.items(), bounds = container.getBounds(), MBP = bounds.MBP, comp, i, len;for (i = 0, len = comps.length; i < len; i++) {comp = container[comps[i]];comp.setBounds(MBP.paddingLeft, MBP.paddingTop, bounds.innerWidth, bounds.innerHeight, 3);}if (!this._hasDisp) {comp = container[comps[this.def.status.index]];if (comp) {this.show(container, this.def.status.index);}this._hasDisp = true;}}.$override(this.layoutContainer);thi$.first = function (container) {var items = container.items0(), index = this.def.status.index = 0;this.show(container, index);};thi$.next = function (container) {var items = container.items0(), index;if (items.length > 0) {index = (this.def.status.index + 1) % items.length;this.def.status.index = index;this.show(container, index);}};thi$.previous = function (container) {var items = container.items0(), index;if (items.length > 0) {index = this.def.status.index - 1;index = index < 0 ? items.length - 1 : index;this.def.status.index = index;this.show(container, index);}};thi$.last = function (container) {var items = container.items0(), index = this.def.status.index = items.length - 1;this.show(container, index);};thi$.show = function (container, index) {if (!Class.isNumber(index)) {return;}var items = container.items0(), compid = items[index], item, comp;this.def.status.index = index;items = container.items();(function (id, i) {if (id == compid) {item = items.splice(i, 1)[0];throw "break";}}).$forEach(this, items);if (item) {items.push(item);for (var i = items.length - 1; i >= 0; i--) {compid = items[i];comp = container.getComponent(compid);comp.setZ(i - items.length);if (item == compid) {comp.setVisible(true);} else {comp.setVisible(false);}}}};thi$._init = function (def) {def = def || {};def.classType = "js.awt.CardLayout";def.mode = def.mode || 0;def.status = def.status || {};def.status.index = def.status.index || 0;arguments.callee.__super__.apply(this, arguments);}.$override(this._init);this._init.apply(this, arguments);}.$extend(js.awt.AbstractLayout);