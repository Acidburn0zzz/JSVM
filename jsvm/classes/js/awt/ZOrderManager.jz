$package("js.awt");js.awt.ZOrderManager = function () {var CLASS = js.awt.ZOrderManager, thi$ = CLASS.prototype;if (CLASS.__defined__) {return;}CLASS.__defined__ = true;thi$.isZOrder = function () {return this.def.zorder || false;};thi$.setZOrder = function (b) {this.def.zorder = b || false;};thi$.bringCompForward = function (comp, fire) {var stack = this.def.items, comps = _allComps.call(this), compN;for (var i = 0, len = comps.length; i < len && len > 2; i++) {if (comp === comps[i]) {compN = comps[i + 1];if (compN != undefined && ((!comp.isAlwaysOnTop() && !compN.isAlwaysOnTop()) || (comp.isAlwaysOnTop() && compN.isAlwaysOnTop()))) {var b = stack.splice(i, 1)[0];stack.splice(i + 1, 0, b);this.zOrderAdjust(fire);return;}}}};thi$.bringCompToFront = function (comp, fire) {var stack = this.def.items, b = _findComp.call(this, comp, stack);if (comp.isAlwaysOnTop()) {stack.push(b);} else {var comps = _allComps.call(this);if (comps.length == 0) {stack.push(b);} else {for (var i = comps.length - 1; i >= 0; i--) {if (!comps[i].isAlwaysOnTop()) {stack.splice(i + 1, 0, b);break;} else {if (i == 0) {stack.unshift(b);}}}}}this.zOrderAdjust(fire);};thi$.sendCompBackward = function (comp, fire) {var stack = this.def.items, comps = _allComps.call(this), compN;for (var len = comps.length, i = len - 1; i >= 0 && len > 2; i--) {if (comp === comps[i]) {compN = comps[i - 1];if (compN != undefined && ((!comp.isAlwaysOnTop() && !compN.isAlwaysOnTop()) || (comp.isAlwaysOnTop() && compN.isAlwaysOnTop()))) {var b = stack.splice(i, 1)[0];stack.splice(i - 1, 0, b);this.zOrderAdjust(fire);return;}}}};thi$.sendCompToBack = function (comp, fire) {var stack = this.def.items, b = _findComp.call(this, comp, stack);if (!comp.isAlwaysOnTop()) {stack.unshift(b);} else {var comps = _allComps.call(this);for (var i = comps.length - 1; i >= 0; i--) {if (!comps[i].isAlwaysOnTop()) {stack.splice(i + 1, 0, b);break;}}}this.zOrderAdjust(fire);};thi$.setCompAlwaysOnTop = function (comp, alwaysOnTop, fire) {if (comp.isAlwaysOnTop() === alwaysOnTop) {return;}if (alwaysOnTop) {comp.def.alwaysOnTop = true;this.bringCompToFront(comp, fire);} else {this.sendCompToBack(comp, fire);comp.def.alwaysOnTop = false;}this.zOrderAdjust(fire);};thi$.zOrderAdjust = function (fire) {if (this.isZOrder()) {var stack = this.def.items, zbase = this.def.zbase || 0;for (var i = stack.length - 1; i >= 0; i--) {this.getComponent(stack[i]).setZ(zbase + i - stack.length, fire);}}};var _findComp = function (comp, comps) {var stack = this.def.items, b;for (var i = 0, len = comps.length; i < len && len >= 1; i++) {if (comp.id === comps[i]) {b = stack.splice(i, 1)[0];break;}}return b;};var _allComps = function () {var ret = [];(function (id) {ret.push(this.getComponent(id));}).$forEach(this, this.def.items);return ret;};};