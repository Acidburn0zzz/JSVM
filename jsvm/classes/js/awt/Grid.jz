$package("js.awt");js.awt.Grid = function (def) {var CLASS = js.awt.Grid, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class;thi$.rowNum = function () {return this.rows.length;};thi$.colNum = function () {return this.cols.length;};thi$.row = function (index) {return this.rows[index];};thi$.column = function (index) {return this.cols[index];};thi$.cell = function (rowIndex, colIndex) {return this.cells[rowIndex][colIndex];};thi$.layout = function (xbase, ybase, width, height) {_calcDimsMeasure.call(this, this.rows, ybase, height);_calcDimsMeasure.call(this, this.cols, xbase, width);_calcCellsMeasure.call(this, this.rowNum(), this.colNum());};var _initDims = function (dims, dimDefs) {var defs = new Array(dims.length), dimDef, dim, weight = 1, i, len, v, tmps = [];if (Class.isArray(dimDefs)) {for (i = 0, len = dimDefs.length; i < len; i++) {dimDef = dimDefs[i];defs[dimDef.index] = dimDef;}}for (i = 0, len = defs.length; i < len; i++) {dimDef = defs[i];if (!dimDef) {dimDef = {index:i};}dim = dims[i] = new (CLASS.Dimension)(dimDef);if (!dim.rigid && dim.visible) {v = dim.weight;if (Class.isNumber(v)) {weight -= v;} else {tmps.push(dim);}}}if (tmps.length > 0) {weight /= tmps.length;while (tmps.length > 0) {tmps.shift().weight = weight;}}};var _calcDimsMeasure = function (dims, base, total) {var dim, i, len = dims.length, tmps = [];for (i = 0; i < len; i++) {dim = dims[i];if (!dim.visible) {continue;}if (dim.rigid) {total -= dim.measure;} else {tmps.push(dim);}}var rest = total, v;while (tmps.length > 0) {dim = tmps.shift();v = Math.round(total * dim.weight);rest -= v;dim.measure = v;}if (Class.isNumber(v)) {dim.measure = (v + rest);}for (i = 0; i < len; i++) {dim = dims[i];dim.offset = base;base += dim.visible ? dim.measure : 0;}};var _initCells = function (cells, cellDefs) {var defs, cellDef, cell, i, j, rspan, cspan, ri, cj, m = this.rowNum(), n = this.colNum(), visible;defs = new Array(m);for (i = 0; i < m; i++) {defs[i] = new Array(n);}if (Class.isArray(cellDefs)) {for (i = 0; i < cellDefs.length; i++) {cellDef = cellDefs[i];if (!Class.isNumber(cellDef.rowSpan)) {cellDef.rowSpan = 1;}if (!Class.isNumber(cellDef.colSpan)) {cellDef.colSpan = 1;}defs[cellDef.rowIndex][cellDef.colIndex] = cellDef;}}for (i = 0; i < m; i++) {for (j = 0; j < n; j++) {cellDef = defs[i][j];if (cellDef === null) {continue;}if (cellDef === undefined) {cellDef = {rowIndex:i, colIndex:j, rowSpan:1, colSpan:1};}visible = false;rspan = cellDef.rowSpan - 1;while (rspan >= 0) {cspan = cellDef.colSpan - 1;while (cspan >= 0) {if (rspan != 0 || cspan != 0) {ri = i + rspan;cj = j + cspan;defs[ri][cj] = null;visible = visible || (this.row(ri).visible && this.column(cj).visible);}cspan--;}rspan--;}cell = new (CLASS.Cell)(cellDef);cell.visible = (visible || (this.row(i).visible && this.column(j).visible));cells[i][j] = cell;}}};var _calcCellsMeasure = function (m, n) {var cells = this.cells, cell, i, j;for (i = 0; i < m; i++) {for (j = 0; j < n; j++) {cell = cells[i][j];if (cell) {cell.calcBounds(this);}}}};thi$._init = function (def) {if (def == undefined) {return;}var m, n;m = def.rowNum;m = Class.isNumber(m) ? (m > 0 ? m : 1) : 1;this.rows = new Array(m);_initDims.call(this, this.rows, def.rows);n = def.colNum;n = Class.isNumber(n) ? (n > 0 ? n : 1) : 1;this.cols = new Array(n);_initDims.call(this, this.cols, def.cols);this.cells = new Array(m);for (var i = 0; i < m; i++) {this.cells[i] = new Array(n);}_initCells.call(this, this.cells, def.cells);};this._init.apply(this, arguments);}.$extend(js.lang.Object);js.awt.Grid.Dimension = function (def) {var CLASS = js.awt.Grid.Dimension, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class;thi$._init = function (def) {if (def == undefined) {return;}this.index = def.index;this.rigid = (def.rigid === true);this.measure = 0;this.weight = def.weight;if (this.rigid === true) {this.weight = 0;if (Class.isNumber(def.measure)) {this.measure = def.measure;}}this.visible = !(def.visible === false);};this._init.apply(this, arguments);}.$extend(js.lang.Object);js.awt.Grid.Cell = function (def) {var CLASS = js.awt.Grid.Cell, thi$ = CLASS.prototype;if (CLASS.__defined__) {this._init.apply(this, arguments);return;}CLASS.__defined__ = true;var Class = js.lang.Class;thi$.calcBounds = function (G) {var index, span, dim, v, offset, i;index = this.colIndex;span = this.colSpan;v = 0;offset = null;for (i = 0; i < span; i++) {dim = G.column(index + i);if (dim.visible) {v += dim.measure;if (offset === null) {offset = dim.offset;}}}this.x = offset;this.width = v;this.innerWidth = v - this.PW;index = this.rowIndex;span = this.rowSpan;v = 0;offset = null;for (i = 0; i < span; i++) {dim = G.row(index + i);if (dim.visible) {v += dim.measure;if (offset === null) {offset = dim.offset;}}}this.y = offset;this.height = v;this.innerHeight = v - this.PH;};thi$._init = function (def) {if (def == undefined) {return;}this.rowIndex = def.rowIndex;this.colIndex = def.colIndex;this.rowSpan = Class.isNumber(def.rowSpan) ? def.rowSpan : 1;this.colSpan = Class.isNumber(def.colSpan) ? def.colSpan : 1;this.paddingTop = def.paddingTop || 0;this.paddingRight = def.paddingRight || 0;this.paddingBottom = def.paddingBottom || 0;this.paddingLeft = def.paddingLeft || 0;this.PW = this.paddingLeft + this.paddingRight;this.PH = this.paddingTop + this.paddingBottom;};this._init.apply(this, arguments);}.$extend(js.lang.Object);